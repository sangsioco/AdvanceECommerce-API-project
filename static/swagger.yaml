swagger: '2.0'
info:
  title: "E-commerce API"
  description: "This is an API to manage an E-commerce application"
host: "127.0.0.1:5000"
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"
#adding security - type in bearer for value after clicking authorize
securityDefinitions:
  bearerAuth:
    type: apiKey
    name: Authorization
    in: header
paths:
  /accounts/login:
    post:
      tags:
        - CustomerAccounts
      summary: "Login endpoint"
      description: "Endpoint for user authentication."
      parameters:
        - in: "body"
          name: "body"
          description: "Credentials for login"
          required: true
          schema:
            $ref: "#/definitions/LoginCredentials"
      responses:
        200:
          description: "Login successful"
          schema:
            $ref: "#/definitions/LoginResponse"
          examples:
            application/json:
              value:
                auth_token: "abcfdae461fd2456457z16..."
                message: "LoginSuccessful"
                status: "success"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
          examples:
            application/json:
              value:
                status: "error"
                message: "Invalid credentials"
  /customers:
    post:
      tags:
        - Customers
      summary: Save a new customer
      operationId: saveCustomer
      responses:
        '201':
          description: Customer created
    get:
      tags:
        - Customers
      summary: Get all customers
      operationId: findAllCustomers
      responses:
        '200':
          description: A list of customers
  /customers/gmail:
    get:
      tags:
        - Customers
      summary: Get customers with Gmail addresses
      operationId: findCustomerGmail
      responses:
        '200':
          description: A list of customers with Gmail addresses
  /customers/paginate:
    get:
      tags:
        - Customers
      summary: Get paginated customers
      operationId: findAllCustomersPagination
      responses:
        '200':
          description: A paginated list of customers
  /customers/total-order-value:
    get:
      tags:
        - Customers
      summary: Get total order value for customers
      operationId: totalOrderValue
      responses:
        '200':
          description: Total order value for customers
  /customers/{customer_id}:
    put:
      tags:
        - Customers
      summary: Update a customer
      operationId: updateCustomer
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer updated
    delete:
      tags:
        - Customers
      summary: Delete a customer
      operationId: deleteCustomer
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Customer deleted
  /employees:
    post:
      tags:
        - Employees
      summary: Save a new employee
      operationId: saveEmployee
      responses:
        '201':
          description: Employee created
    get:
      tags:
        - Employees
      summary: Get all employees
      operationId: findAllEmployees
      responses:
        '200':
          description: A list of employees
  /employees/total-quantity-produced:
    get:
      tags:
        - Employees
      summary: Get total quantity produced by employees
      operationId: getTotalQuantityProducedByEmployee
      responses:
        '200':
          description: Total quantity produced by employees
  /orders/place:
    post:
      tags:
        - Orders
      summary: Place a new order
      operationId: placeOrder
      responses:
        '201':
          description: Order placed
  /orders/paginate:
    get:
      tags:
        - Orders
      summary: Get paginated orders
      operationId: findAllOrdersPagination
      responses:
        '200':
          description: A paginated list of orders
  /orders/id{id}:
    get:
      tags:
        - Orders
      summary: Get order by ID
      operationId: findOrderById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order details
  /orders/{order_id}:
    get:
      tags:
        - Orders
      summary: Retrieve an order
      operationId: retrieveOrder
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order details
  /products:
    post:
      tags:
        - Products
      summary: Save a new product
      operationId: saveProduct
      responses:
        '201':
          description: Product created
    get:
      tags:
        - Products
      summary: Get all products
      operationId: findAllProducts
      responses:
        '200':
          description: A list of products
  /products/paginate:
    get:
      tags:
        - Products
      summary: Get paginated products
      operationId: findAllProductsPagination
      responses:
        '200':
          description: A paginated list of products
  /products/top-selling-products:
    get:
      tags:
        - Products
      summary: Get top-selling products
      operationId: topSellingProducts
      responses:
        '200':
          description: A list of top-selling products
  /products/{product_id}:
    get:
      tags:
        - Products
      summary: Read product details
      operationId: readProduct
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product details
    put:
      tags:
        - Products
      summary: Update a product
      operationId: updateProduct
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product updated
    delete:
      tags:
        - Products
      summary: Delete a product
      operationId: deleteProduct
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Product deleted
  /products/list:
    get:
      tags:
        - Products
      summary: List all products
      operationId: listAllProducts
      responses:
        '200':
          description: A list of all products
  /production:
    post:
      tags:
        - Production
      summary: Save a new production record
      operationId: saveProduction
      responses:
        '201':
          description: Production record created
    get:
      tags:
        - Production
      summary: Get all production records
      operationId: findAllProduction
      responses:
        '200':
          description: A list of production records
  /production/production-by-date:
    get:
      tags:
        - Production
      summary: Get total quantity produced on a specific date
      operationId: getTotalQuantityProducedOnDate
      responses:
        '200':
          description: Total quantity produced on a specific date

definitions:
  Product:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      price:
        type: "number"
        format: "float"
    required:
      - name
      - price
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      customer_id:
        type: "integer"
        format: "int64"
      order_date:
        type: "string"
        format: "date-time"
      total_amount:
        type: "number"
        format: "float"
    required:
      - customer_id
      - order_date
      - total_amount
  Production:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      product_id:
        type: "integer"
        format: "int64"
      quantity_produced:
        type: "integer"
      date_produced:
        type: "string"
        format: "date-time"
    required:
      - product_id
      - quantity_produced
      - date_produced
  Customer:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      email:
        type: "string"
        format: "email"
      address:
        type: "string"
    required:
      - name
      - email
  CustomerAccount:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      customer_id:
        type: "integer"
        format: "int64"
      account_balance:
        type: "number"
        format: "float"
    required:
      - customer_id
      - account_balance
  Employee:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      position:
        type: "string"
    required:
      - name
      - position
  Error:
    type: "object"
    properties:
      status:
        type: "string"
      message:
        type: "string"
    required:
      - status
      - message
